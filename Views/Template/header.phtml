<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>ThinkLab</title>

    <link rel="stylesheet" href="/css/styles.css">
    <link rel="stylesheet" href="/css/bootstrap.min.css">
    <script src="/js/scripts.js"></script>

    <script src="https://kit.fontawesome.com/8aa396f8e9.js" crossorigin="anonymous"></script>
</head>
<body>
    <script src="https://code.jquery.com/jquery-3.4.1.min.js" integrity="sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js" integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6" crossorigin="anonymous"></script>

    <nav class="navbar navbar-expand-lg navbar-light shadow-sm">
        <div class="container">
            <a class="navbar-brand" href="index.php">ThinkLab</a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav">
                    <li class="nav-item active">
                        <a class="nav-link" href="index.php">Home <span class="sr-only">(current)</span></a>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">Dashboard</a>
                        <div class="dropdown-menu">
                            <a class="dropdown-item" href="adminDashboard.php?tab=manageRoles">Manage Roles</a>
                            <a class="dropdown-item" href="adminDashboard.php?tab=manageGroups">Manage Groups</a>
                            <a class="dropdown-item" href="adminDashboard.php?tab=manageUsers">Manage Users</a>
                            <a class="dropdown-item" href="adminDashboard.php?tab=checkSignup">Check Signup</a>
                            <a class="dropdown-item" href="adminDashboard.php?tab=logs">View Session Logs</a>
                        </div>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="user.php">Testing Page</a>
                    </li>
                </ul>
                <ul class="navbar-nav ml-auto">
                    <?php if (!Authentication::isLoggedIn()) : ?>
                        <li class="nav-item">
                            <a class="nav-link" href="login.php">Login</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="signup.php">Sign up</a>
                        </li>
                    <?php endif; ?>
                    <?php if (Authentication::isLoggedIn()) : ?>
                        <?php if (Authentication::User()->isAdmin()) : ?>
                            <li class="nav-item" style="position: relative">
                                <div class="nav-link role-mock <?= Authentication::isMocking() ? "" : "off" ?>" id="mock-logo">
                                    Mock Role<i class="fas fa-mask ml-2"></i>
                                </div>
                                <div class="mockaroo-menu" style="display: none;">
                                    <h5 class="head">Mock Permissions</h5>
                                    <p>Currently Mocking: <span id="m-user"><?= Authentication::isMocking() ? Authentication::mockedUser()->username() : "none"?></span></p>
                                    <form action="#" method="post">
                                        <div class="form-group">
                                            <label for="selectedUser">Select User:</label>
                                            <select name="user-id" id="selectedUser" class="form-control">
                                                <option <?= Authentication::isMocking() ? "" : "selected" ?> disabled>Select a user...</option>
                                                <?php foreach (User::getAllusers() as $user) : if ($user->id() != Authentication::User()->id()) :?>
                                                    <option value="<?= $user->id() ?>" <?= Authentication::isMocking() && Authentication::mockedUser()->id() == $user->id() ? "selected" : "" ?>><?= $user->username() ?></option>
                                                <?php endif; endforeach; ?>
                                            </select>
                                        </div>
                                        <button type="button" name="removeUser" class="btn btn-sm btn-danger" id="stop-mock">Stop Mocking</button>
                                    </form>
                                </div>
                            </li>
                        <?php endif; ?>
                        <li class="nav-item">
                            <a class="nav-link" href="logout.php">Logout<i class="fas fa-sign-in-alt ml-2"></i></a>
                        </li>
                    <?php endif; ?>
                </ul>
            </div>
        </div>
    </nav>
</body>

<script>
    $(".role-mock").on("click", e => {
        e.stopPropagation();
       $(".mockaroo-menu").slideToggle();
    });

    // Stop propergation when on the menu
    $(".mockaroo-menu").on("click", e => e.stopPropagation());

    document.getElementById("selectedUser").addEventListener("change", function(){
        let id = this.value;
        let body = {
            "id": id
        };
        if (!isNaN(id)) {
            fetch("requests/users/mockUser.php", {
                headers: {
                    "Content-Type": "application/json"
                },
                method: "POST",
                body: JSON.stringify(body),

            }).then(async res => {
                let json = await res.json();
                console.log(json.username);
                document.getElementById("m-user").textContent = json.username;
            }).catch(err => console.log(err));
            document.getElementById("mock-logo").classList.remove("off");
        }
    });

    document.getElementById("stop-mock").addEventListener("click", () => {
        $(".mockaroo-menu").slideUp();
        document.getElementById("selectedUser").selectedIndex = 0;
        document.getElementById("mock-logo").classList.add("off");
        fetch("requests/users/mockUser.php", {
            headers: { "Content-Type": "application/json", },
            method: "POST",
            body: {
                id: "-1"
            }
        }).then(res => console.log(res.json()))
    });

    $("body").on("click", () => $(".mockaroo-menu").slideUp());
</script>